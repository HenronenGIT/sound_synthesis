#!/usr/bin/env python3
import sys
import pyaudio
import numpy as np
import json

def collect_info(f):
	lines = f.readlines()
	tempo_word = 'tempo'
	tracks_word = 'tracks'
	i = 0
	count = 0
	track2 = dict()
	#list(track[0].values())
	#print(track[0].keys())
	#print(track[0].values())
	#track[0].update(total=1)
	# way to grab all the elements. this grabs 'octa' first element
	#print(list(track[0].items())[0][1])
	#print(track[0].values())
	#print(track[0].items())
	
	for line in lines:
		#if (line[0] != '#' or line[0] != '\n'):
			#print (line, end="") # Remove all new lines
		if tempo_word in line:
			for word in line.split():
				if word.isdigit():
					tempo = int(word)
		if tracks_word in line:
			tracks = line.split(' ')[1]
			tracks = tracks.replace("\n", "")
			tracks = tracks.split(',')
		if line[0].isdigit():
			# dynamicaly creates dictionary to store tracks in
			track2[count] = {"nbr": 0, "tracks": "", "pitch": [], "alter": [], "octa": [], "duration": [], "total": 0}
			
			# collecting nbr of track
			track2[count].update(nbr=int(line.split(':')[0]))
			#print(track2[count]["nbr"])
			track2[count].update(tracks=tracks[track2[count]["nbr"] - 1])
			#k = 4
			#if (count == 9):
			#	k += 1
			# collect pitch, alteration, octave and duration
			#word_count = 0
			#print(line[5])
			strstr = line.replace('\n', '')
			#strstr = strstr.replace('  ', '')
			strstr = strstr.replace('|', '')
			string = strstr.split(' ')
		
			string.pop(0)
			#print(string)
			prev = 1
			for word in string:
				j = 0
				while j < len(word):
					# collecting pitch
					if word[j] >= 'a' and word[j] <= 'g' and j == 0:
						track2[count]["pitch"].append(word[0])
					elif word[j] == 'r' and j == 0:
						track2[count]["pitch"].append(word[0])
					elif word[j] < 'a' and word[j] > 'g' and word[j] != 'r' and j == 0:
						track2[count]["pitch"].append("N")
					
					# collecting duration
					if word[j] == '/':
						#print(len(word))
						#track2[count].update(duration=50)
						#track2[count].update(duration=int(word[j + 1]))
						s = ''
						j += 1
						while j < len(word):
							s += word[j]
							j += 1
						track2[count]["duration"].append(float(s))
						prev = float(s)
						#track2[count]["duration"].update(int(word[j + 1]))
						# if end and havent found duration
					elif j == len(word) - 1:
						track2[count]["duration"].append(prev)
					#total_count += 1
					#print(total_count)
					#print(track2[count]["duration"][0])
					#track2[count].update(total=total_count)
					j += 1
				
			#track2[count].setdefault(pitch, []).append("bob")
				

			count += 1
			print(json.dumps(track2, sort_keys=False, indent=1))
			#print(string)
			#track[i] = int(line.split(':')[0])
			#print(track[i].nbr)
		i += 1
	
	print(tempo)

def main(argv, argc):
	if argc == 2:
		f = open(argv[1], "r")
		collect_info(f)
	else:
		print("Usage: ./minisynth /path/to/file")

if __name__ == "__main__":
	main(sys.argv, len(sys.argv))
